{"version":3,"sources":["p2-homeworks/h1/Message.module.scss","p2-homeworks/h3/Greeting.module.scss","p2-homeworks/h5/pages/Error404.module.css","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.module.css","p2-homeworks/h5/Header.module.css","p2-homeworks/h2/Affair.module.css","p2-homeworks/h2/Affairs.module.css","p2-homeworks/h4/common/c2-SuperButton/SuperButton.module.css","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.module.css","p1-main/m1-ui/u1-app/App.module.css","p2-homeworks/h1/HW1.module.css","p2-homeworks/h4/HW4.module.css","p2-homeworks/h1/Message.tsx","p2-homeworks/h1/HW1.tsx","p2-homeworks/h2/Affair.tsx","p2-homeworks/h2/Affairs.tsx","p2-homeworks/h2/HW2.tsx","p2-homeworks/h5/pages/PreJunior.tsx","p2-homeworks/h5/pages/Error404.tsx","p2-homeworks/h3/Greeting.tsx","p2-homeworks/h3/GreetingContainer.tsx","p2-homeworks/h3/HW3.tsx","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.tsx","p2-homeworks/h4/common/c2-SuperButton/SuperButton.tsx","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.tsx","p2-homeworks/h4/HW4.tsx","p2-homeworks/h5/pages/JuniorPlus.tsx","p2-homeworks/h5/pages/Junior.tsx","p2-homeworks/h5/Routes.tsx","p2-homeworks/h5/Header.tsx","p2-homeworks/h5/HW5.tsx","p1-main/m1-ui/u1-app/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Message","avatar","name","message","time","link","className","s","href","target","rel","message__img","src","alt","message__box","message__content","message__name","message__text","messageData","HW1","hw1__title","Affair","props","affair","affair__name","affair__btn","onClick","deleteAffairCallback","_id","Affairs","mappedAffairs","data","map","a","key","affairs","filter","i","affairs__btn","active","setFilter","defaultAffairs","v4","priority","HW2","useState","setAffairs","filteredAffairs","filterAffairs","deleteAffair","PreJunior","Error404","error","error__number","error__message","error__symbol","error__redirect","to","Greeting","setNameCallback","addUser","totalUsers","inputClass","greeting__input","greeting","value","onChange","placeholder","greeting__error","greeting__btn","greeting__total","GreetingContainer","users","addUserCallback","setName","setError","length","e","currentTarget","trim","alert","HW3","setUsers","newUser","v1","SuperInputText","type","onKeyPress","onChangeText","onEnter","spanClassName","restProps","finalSpanClassName","forSuperIputTextSpan","finalInputClassName","forSuperIputText","errorInput","SuperButton","red","finalClassName","defaultBtn","SuperCheckbox","onChangeChecked","children","checkbox","checked","HW4","text","setText","showAlert","setChecked","column","JuniorPlus","Junior","PATH","Routes","path","exact","render","Header","header","activeClassName","header__active","HW5","App","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.da00b2ca.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__3b-T_\",\"message__img-link\":\"Message_message__img-link__1DdXg\",\"message__img\":\"Message_message__img__3n65h\",\"message__box\":\"Message_message__box__3NXfN\",\"message__content\":\"Message_message__content__3WJlG\",\"message__name\":\"Message_message__name__1-GxL\",\"message__text\":\"Message_message__text__35uF6\",\"message__time\":\"Message_message__time__rTfIq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"greeting\":\"Greeting_greeting__2muvG\",\"greeting__box-input\":\"Greeting_greeting__box-input__2OrZx\",\"greeting__input\":\"Greeting_greeting__input__vlxBJ\",\"greeting__box-button\":\"Greeting_greeting__box-button__3T0zX\",\"greeting__btn\":\"Greeting_greeting__btn__33MlY\",\"greeting__total\":\"Greeting_greeting__total__3ZJNg\",\"greeting__error\":\"Greeting_greeting__error__1J84z\",\"error\":\"Greeting_error__1bbrh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"Error404_error__VZnkA\",\"error__number\":\"Error404_error__number__1Jeuq\",\"error__message\":\"Error404_error__message__20j8p\",\"error__symbol\":\"Error404_error__symbol__2UPs_\",\"error__redirect\":\"Error404_error__redirect__sbBMl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"errorInput\":\"SuperInputText_errorInput__23Mzl\",\"error\":\"SuperInputText_error__2ZBOL\",\"forSuperIputText\":\"SuperInputText_forSuperIputText__30S3s\",\"forSuperIputTextSpan\":\"SuperInputText_forSuperIputTextSpan__2zJA7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1yjsU\",\"header__active\":\"Header_header__active__31O0L\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"affair\":\"Affair_affair__3dhth\",\"affair__name\":\"Affair_affair__name__3mtOo\",\"affair__btn\":\"Affair_affair__btn__27Dwi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"affairs\":\"Affairs_affairs__1m9bv\",\"affairs__btn\":\"Affairs_affairs__btn__3ZOMc\",\"active\":\"Affairs_active__2Ek8a\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"defaultBtn\":\"SuperButton_defaultBtn__1nMfz\",\"red\":\"SuperButton_red__zA20c\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__55xSy\",\"spanClassName\":\"SuperCheckbox_spanClassName__nM4KB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__21kR0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"hw1__title\":\"HW1_hw1__title__1Gqjd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blue\":\"HW4_blue__bEkUe\",\"column\":\"HW4_column__bbjaV\",\"forSuperIputText\":\"HW4_forSuperIputText__2Gkdc\"};","import React from \"react\";\r\nimport s from \"./Message.module.scss\"\r\n\r\nexport type MessageType = {\r\n    avatar: string,\r\n    name: string,\r\n    message: string,\r\n    time: string,\r\n    // Добавил свойство link, для того, чтобы использовать картинку и имя как ссылки\r\n    link?: string\r\n}\r\n\r\nexport function Message({ avatar, name, message, time, link = \"https://github.com/Mirudistok32\" }: MessageType) {\r\n    return (\r\n        <div className={s.message}>\r\n            {/* Я не знаю, что значат атрибуты rel - у ссылок. \r\n                Когда пишешь атрибут target, то React требует атрибут rel. \r\n                Это как-то связанно с безапастностью, но я точно не понимаю этот процесс. */}\r\n            <a className={s['message__img-link']} href={link} target=\"_blank\" rel='noopener noreferrer'>\r\n                <img className={s.message__img} src={avatar} alt=\"avatar\" />\r\n            </a>\r\n            <div className={s.message__box}>\r\n                <div className={s.message__content}>\r\n                    <a className={s.message__name} href={link} target=\"_blank\" rel='noopener noreferrer'>{name}</a>\r\n                    <div className={s.message__text}>{message}</div>\r\n                </div>\r\n                <span className={s[\"message__time\"]}>\r\n                    {time}\r\n                </span>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport { Message } from './Message'\r\n// Я подключил глобальные стили, для комфорта. Обычно я их в index.css записываю)\r\nimport s from './HW1.module.css'\r\n\r\nconst messageData = {\r\n    avatar: \"https://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpg\",\r\n    name: \"Станислав (mirudistok) Постников\",\r\n    message: \"`Успех приходит лишь к тем, кто не боится столкнуться с трудностями и пожертвовать своими благами. Джеймс Аллен`\",\r\n    time: \"22:00\",\r\n};\r\n\r\nfunction HW1() {\r\n    return (\r\n        <div>\r\n            <hr />\r\n            <span className={s.hw1__title}>homeworks 1</span>\r\n            {/*should work (должно работать)*/}\r\n\r\n            {/* У себя в index.html я подключил шрифт Roboto с жирностью 400 и 500 из google-fonts */}\r\n            <Message\r\n                avatar={messageData.avatar}\r\n                name={messageData.name}\r\n                message={messageData.message}\r\n                time={messageData.time} />\r\n\r\n            <hr />\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeMessage/>*/}\r\n            <hr />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HW1;\r\n","import React from \"react\";\r\nimport { AffairType } from \"./HW2\";\r\nimport s from \"./Affair.module.css\"\r\n\r\ntype AffairPropsType = {\r\n    // key не нужно типизировать\r\n    affair: AffairType // need to fix any\r\n    deleteAffairCallback: (_id: string) => void // need to fix any\r\n}\r\n\r\nfunction Affair(props: AffairPropsType) {\r\n    const deleteCallback = () => { props.deleteAffairCallback(props.affair._id) };// need to fix\r\n\r\n    return (\r\n        <div className={s.affair}>\r\n            <span className={s.affair__name}>\r\n                {\r\n                    props.affair.name\r\n                }\r\n            </span>\r\n            <button className={s.affair__btn} onClick={deleteCallback}>X</button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Affair;\r\n","import React from \"react\";\r\nimport Affair from \"./Affair\";\r\nimport s from './Affairs.module.css'\r\nimport { AffairType, FilterType } from \"./HW2\";\r\n\r\ntype AffairsPropsType = { // need to fix any\r\n    data: Array<AffairType>\r\n    setFilter: (filter: FilterType) => void\r\n    deleteAffairCallback: (_id: string) => void\r\n    filter: FilterType\r\n}\r\n\r\n// Мой тип для массива кнопок\r\ntype ButtonsDataType = {\r\n    name: string,\r\n    filter: FilterType,\r\n    _id: number\r\n}\r\n\r\nfunction Affairs(props: AffairsPropsType) {\r\n\r\n\r\n    const mappedAffairs = props.data.map((a: AffairType) => (\r\n        <Affair // should work\r\n            key={a._id} // кеи ОБЯЗАТЕЛЬНЫ в 99% - так что лучше их писать всегда при создании компонент в мапе\r\n            affair={a}\r\n            deleteAffairCallback={props.deleteAffairCallback}\r\n        />\r\n    ))\r\n\r\n    // const setAll = () => { props.setFilter('all') }; // need to fix\r\n    // const setHigh = () => { props.setFilter('high') };\r\n    // const setMiddle = () => { props.setFilter('middle') };\r\n    // const setLow = () => { props.setFilter('low') };\r\n\r\n\r\n    // Мой массив кнопок\r\n    const buttonsData: Array<ButtonsDataType> = [\r\n        { name: 'All', filter: 'all', _id: 1 },\r\n        { name: 'High', filter: 'high', _id: 2 },\r\n        { name: 'Middle', filter: 'middle', _id: 3 },\r\n        { name: 'Low', filter: 'low', _id: 4 },\r\n    ]\r\n\r\n    return (\r\n        <div className={s.affairs} >\r\n\r\n            {mappedAffairs}\r\n\r\n            {/* Это вариант тоже работает, но только без подсвечивания активной кнопки */}\r\n            {/* <button className={s.affairs__btn} onClick={setAll}>All</button>\r\n            <button className={s.affairs__btn} onClick={setHigh}>High</button>\r\n            <button className={s.affairs__btn} onClick={setMiddle}>Middle</button>\r\n            <button className={s.affairs__btn} onClick={setLow}>Low</button> */}\r\n            {/* Создал массив с объектами, которые представляют набор button.\r\n                затем пробегаюсь по массиву через метод map(), вешаю на каждую кнопку событие onClick\r\n                и устанавливаю через callback функцию setFilter() фильтр. Взависимости от фильтра, \r\n                активной кнопке применяются другие стили */}\r\n            {\r\n                buttonsData.map(i => {\r\n                    return <button\r\n                        key={i._id}\r\n                        className={`\r\n                            ${s.affairs__btn} \r\n                            ${i.filter === props.filter ? s.active : ''}\r\n                        `}\r\n                        onClick={() => props.setFilter(i.filter)}>{i.name}</button>\r\n                })\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Affairs;\r\n","import React, { useState } from \"react\";\r\nimport Affairs from \"./Affairs\";\r\nimport { v4 } from \"uuid\";\r\n\r\n// types\r\nexport type AffairPriorityType = 'high' | \"low\" | \"middle\"; // need to fix any\r\nexport type AffairType = {\r\n    _id: string\r\n    name: string\r\n    priority: FilterType\r\n}; // need to fix any\r\nexport type FilterType = \"all\" | AffairPriorityType;\r\n\r\n\r\n// constants\r\nconst defaultAffairs: Array<AffairType> = [ // need to fix any\r\n    { _id: v4(), name: \"HTML, CSS, JS, TS\", priority: \"high\" },\r\n    { _id: v4(), name: \"React, Redux,\", priority: \"high\" },\r\n    { _id: v4(), name: \"Hooks, Formik\", priority: \"high\" },\r\n    { _id: v4(), name: \"JEST, Storybook, ANT design, Git\", priority: \"low\" },\r\n    { _id: v4(), name: \"REST API, redux thunk\", priority: \"high\" },\r\n    { _id: v4(), name: \"Pure function\", priority: \"middle\" },\r\n    { _id: v4(), name: \"React.PureComponent, React.memo, React.lazy, React.Suspense\", priority: \"middle\" },\r\n    { _id: v4(), name: \"FLUX, HOC, DOM, VIRTUAL DOM,\", priority: \"high\" },\r\n    { _id: v4(), name: \"Select, reselect, redux-ducks\", priority: \"low\" },\r\n];\r\n\r\n// pure helper functions\r\nexport const filterAffairs = (affairs: Array<AffairType>, filter: FilterType): Array<AffairType> => { // need to fix any\r\n    switch (filter) {\r\n        case 'all':\r\n            return affairs\r\n        case 'high':\r\n            return affairs.filter(a => a.priority === 'high')\r\n        case 'middle':\r\n            return affairs.filter(a => a.priority === 'middle')\r\n        case 'low':\r\n            return affairs.filter(a => a.priority === 'low')\r\n        default:\r\n            return affairs\r\n    }\r\n}\r\nexport const deleteAffair = (affairs: Array<AffairType>, _id: string): Array<AffairType> => { // need to fix any\r\n    return affairs.filter(a => a._id !== _id); // need to fix\r\n}\r\n\r\nfunction HW2() {\r\n\r\n    const [affairs, setAffairs] = useState<Array<AffairType>>(defaultAffairs); // need to fix any\r\n    const [filter, setFilter] = useState<FilterType>(\"all\");\r\n\r\n    const filteredAffairs = filterAffairs(affairs, filter);\r\n    const deleteAffairCallback = (_id: string) => setAffairs(deleteAffair(affairs, _id)); // need to fix any\r\n\r\n    return (\r\n        <div>\r\n            <hr />\r\n            homeworks 2\r\n\r\n            {/*should work (должно работать)*/}\r\n            <Affairs\r\n                data={filteredAffairs}\r\n                setFilter={setFilter}\r\n                deleteAffairCallback={deleteAffairCallback}\r\n                // Отправляю фильтр для того, чтобы можно было задать\r\n                // активной кнопке класс\r\n                filter={filter}\r\n\r\n            />\r\n\r\n            <hr />\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeAffairs/>*/}\r\n            <hr />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HW2;\r\n","import React from \"react\";\r\nimport HW1 from \"../../h1/HW1\";\r\nimport HW2 from \"../../h2/HW2\";\r\n\r\n\r\nfunction PreJunior() {\r\n    return (\r\n        <div>\r\n            <HW1 />\r\n            <HW2 />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PreJunior;\r\n","import React from \"react\";\r\nimport s from './Error404.module.css'\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\n\r\nfunction Error404() {\r\n    return (\r\n        <div className={s.error}>\r\n            <div className={s.error__number} >404</div>\r\n            <div className={s.error__message} >Page not found!</div>\r\n            <div className={s.error__symbol} >—ฅ/ᐠ.̫ .ᐟ\\ฅ—</div>\r\n            <div className={s.error__redirect}><NavLink to={`/`}>{\"<= Вернуться на главную страницу\"}</NavLink></div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Error404;\r\n","import React, { ChangeEvent } from \"react\";\r\nimport s from \"./Greeting.module.scss\";\r\n\r\ntype GreetingPropsType = {\r\n    name: string // need to fix any\r\n    setNameCallback: (e: ChangeEvent<HTMLInputElement>) => void // need to fix any\r\n    addUser: () => void // need to fix any\r\n    error: string // need to fix any\r\n    totalUsers: number\r\n\r\n}\r\n\r\n// презентационная компонента (для верстальщика)\r\nconst Greeting: React.FC<GreetingPropsType> = (\r\n    { name, setNameCallback, addUser, error, totalUsers = 0, } // деструктуризация пропсов\r\n) => {\r\n\r\n    // Это по заданию\r\n    // let inputClass = `` // need to fix with (?:)\r\n    // inputClass = error ? s.error : ``\r\n\r\n    // А тут я уже свои классы добавляю\r\n    let inputClass = s.greeting__input\r\n    inputClass = error ? inputClass + ` ` + s.error : inputClass; // вот тут неуверен в красивости кода\r\n\r\n    // Вот так для меня более понятнее .)\r\n    // if (error) {\r\n    //     inputClass += ` ${s.error}`\r\n    // }\r\n\r\n\r\n    return (\r\n        <div className={s.greeting}>\r\n            <div className={s[\"greeting__box-input\"]}>\r\n                <input\r\n                    className={inputClass}\r\n                    value={name}\r\n                    onChange={setNameCallback}\r\n                    placeholder=\"Введите имя\"\r\n                />\r\n                <span className={s.greeting__error}>{error}</span>\r\n            </div>\r\n            <div className={s[\"greeting__box-button\"]}>\r\n                <button\r\n                    className={s.greeting__btn}\r\n                    onClick={addUser}>\r\n                    add\r\n                </button>\r\n                <span className={s.greeting__total}>{totalUsers}</span>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Greeting;\r\n","import React, { useState, ChangeEvent } from \"react\";\r\nimport Greeting from \"./Greeting\";\r\nimport { UserType } from \"./HW3\";\r\n\r\ntype GreetingContainerPropsType = {\r\n    users: Array<UserType> // need to fix any\r\n    addUserCallback: (name: string) => void // need to fix any\r\n}\r\n\r\n// более простой и понятный для новичков\r\n// function GreetingContainer(props: GreetingPropsType) {\r\n\r\n// более современный и удобный для про :)\r\n// уровень локальной логики\r\nconst GreetingContainer: React.FC<GreetingContainerPropsType> = ({ users, addUserCallback }) => { // деструктуризация пропсов\r\n    const [name, setName] = useState<string>(\"\"); // need to fix any\r\n    // Сначало думал, что надо boolean присваивать error, а потом вспомнил про преобразование логических типов и картинка сложилась.)\r\n    const [error, setError] = useState<string>(\"\"); // need to fix any\r\n\r\n    const setNameCallback = (e: ChangeEvent<HTMLInputElement>) => { // need to fix any\r\n        setName(e.currentTarget.value)\r\n        setError(\"\")\r\n    };\r\n    const addUser = () => {\r\n        if (name.trim()) {\r\n            addUserCallback(name)\r\n            alert(`Hello  ${name}!`);\r\n            setName('')\r\n        } else {\r\n            setError(`* Вы забыли ввести имя`)\r\n            setName('')\r\n        }\r\n\r\n    };\r\n\r\n    const totalUsers: number = users.length; // need to fix\r\n\r\n    return (\r\n        <Greeting\r\n            name={name}\r\n            setNameCallback={setNameCallback}\r\n            addUser={addUser}\r\n            error={error}\r\n            totalUsers={totalUsers}\r\n\r\n        />\r\n    );\r\n}\r\n\r\nexport default GreetingContainer;\r\n","import React, { useState } from \"react\";\r\nimport GreetingContainer from \"./GreetingContainer\";\r\nimport { v1 } from 'uuid';\r\n\r\n// types\r\nexport type UserType = {\r\n    _id: string // need to fix any\r\n    name: string // need to fix any\r\n}\r\n\r\n// уровень работы с глобальными данными\r\nfunction HW3() {\r\n    const [users, setUsers] = useState<Array<UserType>>([]); // need to fix any\r\n\r\n    const addUserCallback = (name: string) => { // need to fix any\r\n        const newUser: UserType = { name: name, _id: v1() }\r\n        setUsers([...users, newUser]); // need to fix\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <hr />\r\n            homeworks 3\r\n\r\n            {/*should work (должно работать)*/}\r\n            <GreetingContainer\r\n                users={users}\r\n                addUserCallback={addUserCallback}\r\n            />\r\n\r\n            <hr />\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeGreeting/>*/}\r\n            <hr />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HW3;\r\n","import React, { ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent } from \"react\";\r\nimport s from \"./SuperInputText.module.css\";\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n    setError: (value: string) => void\r\n};\r\n\r\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (props) => {\r\n\r\n    const {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange,\r\n        onKeyPress,\r\n        className,\r\n\r\n        onChangeText,\r\n        onEnter,\r\n        error,\r\n        spanClassName,\r\n        setError,\r\n\r\n        ...restProps\r\n    } = props\r\n\r\n\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange && onChange(e);\r\n        onChangeText && onChangeText(e.currentTarget.value);\r\n        setError(\"\")\r\n    }\r\n\r\n\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        onKeyPress && onKeyPress(e);\r\n\r\n        e.key === \"Enter\" // если нажата кнопка Enter\r\n            && onEnter // и есть пропс onEnter\r\n            && onEnter(); // то вызвать его\r\n    }\r\n\r\n\r\n    let finalSpanClassName = s.forSuperIputTextSpan + ` ${spanClassName ? spanClassName : ''}`;\r\n    finalSpanClassName += ` ${error ? s.error : ''}`;\r\n\r\n    let finalInputClassName = s.forSuperIputText + ` ${className ? className : ''}`;\r\n    finalInputClassName += ` ${error ? s.errorInput : ''}`;\r\n\r\n    // Старый код, если раскоментировать решение в HW4, то это не будет работать, так как, всегда пустая строка приходит\r\n    // const finalInputClassName = error ? s.errorInput : className\r\n\r\n    return (\r\n        <>\r\n            <input\r\n                type={\"text\"}\r\n                onChange={onChangeCallback}\r\n                onKeyPress={onKeyPressCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n            />\r\n            {error && <span className={finalSpanClassName}>*{error}</span>}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SuperInputText;\r\n","import React, { ButtonHTMLAttributes, DetailedHTMLProps } from \"react\";\r\nimport s from \"./SuperButton.module.css\";\r\n\r\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>;\r\n\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\n    red?: boolean\r\n}\r\n\r\nconst SuperButton: React.FC<SuperButtonPropsType> = (props) => {\r\n\r\n    const {\r\n        red,\r\n        className,\r\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\r\n    } = props\r\n\r\n    let finalClassName = `${red ? s.red : ''} ${s.defaultBtn + ` ` + className} `;\r\n\r\n    return (\r\n        <button\r\n            className={finalClassName}\r\n            {...restProps}\r\n        />\r\n    );\r\n}\r\n\r\nexport default SuperButton;\r\n","import React, { ChangeEvent, DetailedHTMLProps, InputHTMLAttributes } from \"react\";\r\nimport s from \"./SuperCheckbox.module.css\";\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\r\n\r\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\r\n    onChangeChecked?: (checked: boolean) => void\r\n    spanClassName?: string\r\n};\r\n\r\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeChecked,\r\n        className, spanClassName,\r\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange && onChange(e)\r\n        onChangeChecked && onChangeChecked(e.currentTarget.checked)\r\n    }\r\n\r\n    const finalInputClassName = `${s.checkbox} ${className ? className : \"\"}`;\r\n\r\n    return (\r\n        <label>\r\n            <input\r\n                type={\"checkbox\"}\r\n                onChange={onChangeCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\r\n            />\r\n            {children && <span className={s.spanClassName}>{children}</span>}\r\n        </label> // благодаря label нажатие на спан передастся в инпут\r\n    );\r\n}\r\n\r\nexport default SuperCheckbox;\r\n","import React, { ChangeEvent, useState } from \"react\";\r\nimport SuperInputText from \"./common/c1-SuperInputText/SuperInputText\";\r\nimport s from \"./HW4.module.css\";\r\nimport SuperButton from \"./common/c2-SuperButton/SuperButton\";\r\nimport SuperCheckbox from \"./common/c3-SuperCheckbox/SuperCheckbox\";\r\n\r\nfunction HW4() {\r\n\r\n    const [text, setText] = useState<string>(\"\");\r\n    //Сделал свой хук для ошибки\r\n    let [error, setError] = useState<string>('')\r\n\r\n\r\n    // Вот такой код не работает... Я думал, если я буду так изменять error, \r\n    // то он измененный будет отправляться дальше, но нет! , всегда пустая строка приходит\r\n    // let error = '';\r\n    // const showAlert = () => {\r\n    //     error = text ? \"\" : \"error\"\r\n    //     if (error) {\r\n    //         alert(\"введите текст...\");\r\n    //     } else {\r\n    //         alert(text); // если нет ошибки показать текст\r\n    //     }\r\n    // }\r\n\r\n\r\n\r\n    const showAlert = () => {\r\n\r\n        //Проверка, если поле пустое , то ошибка, а иначе нет ошибки\r\n        text ? setError(\"\") : setError(\"error\")\r\n        if (error) {\r\n            alert(\"введите текст...\");\r\n        } else {\r\n            alert(text);\r\n            //Затераю поле value\r\n            setText('')\r\n        }\r\n    }\r\n\r\n\r\n    const [checked, setChecked] = useState<boolean>(false);\r\n    const testOnChange = (e: ChangeEvent<HTMLInputElement>) => setChecked(e.currentTarget.checked);\r\n\r\n    return (\r\n        <div>\r\n            <hr />\r\n            homeworks 4\r\n            <div className={s.column}>\r\n                <SuperInputText\r\n                    value={text}\r\n                    onChangeText={setText}\r\n                    onEnter={showAlert}\r\n                    error={error}\r\n                    setError={setError}\r\n                    placeholder={'Я input, читаю ваши...'}\r\n                // className={s.blue} работает!\r\n                />\r\n\r\n                <SuperButton\r\n                    red={false}\r\n                    onClick={showAlert}\r\n                >\r\n                    delete\r\n                </SuperButton>\r\n\r\n\r\n                <SuperCheckbox\r\n                    checked={checked}\r\n                    onChangeChecked={setChecked}\r\n                >\r\n                    some text {/*// этот текст попадёт в children*/}\r\n                </SuperCheckbox>\r\n\r\n                <SuperCheckbox checked={checked} onChange={testOnChange} />\r\n            </div>\r\n\r\n            <hr />\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeSuperInputText/>*/}\r\n            {/*<AlternativeSuperButton/>*/}\r\n            {/*<AlternativeSuperCheckbox/>*/}\r\n            <hr />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HW4;\r\n","import React from \"react\";\r\nimport HW2 from \"../../h2/HW2\";\r\nimport HW1 from \"../../h1/HW1\";\r\nimport HW3 from \"../../h3/HW3\";\r\nimport HW4 from \"../../h4/HW4\";\r\n\r\nexport function JuniorPlus() {\r\n    return (\r\n        <div>\r\n            <HW1 />\r\n            <HW2 />\r\n            <HW3 />\r\n            <HW4 />\r\n        </div>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport HW3 from \"../../h3/HW3\";\r\nimport HW4 from \"../../h4/HW4\";\r\n\r\nexport function Junior() {\r\n    return (\r\n        <div>\r\n            <HW3 />\r\n            <HW4 />\r\n        </div>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport { Switch, Route, Redirect } from \"react-router-dom\";\r\nimport PreJunior from \"./pages/PreJunior\";\r\nimport Error404 from \"./pages/Error404\";\r\nimport { JuniorPlus } from \"./pages/JuniorPlus\";\r\nimport { Junior } from \"./pages/Junior\";\r\n\r\nexport const PATH = {\r\n    PRE_JUNIOR: \"/pre-junior\",\r\n    JUNIOR: \"/junior\",\r\n    JUNIOR_PLUS: \"/junior-plus\"\r\n}\r\n\r\nfunction Routes() {\r\n    return (\r\n        <div>\r\n            <Switch>\r\n                <Route path={\"/\"} exact render={() => <Redirect to={PATH.PRE_JUNIOR} />} />\r\n                <Route path={PATH.PRE_JUNIOR} render={() => <PreJunior />} />\r\n                <Route path={PATH.JUNIOR} render={() => <Junior />} />\r\n                <Route path={PATH.JUNIOR_PLUS} render={() => <JuniorPlus />} />\r\n                <Route render={() => <Error404 />} />\r\n            </Switch>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Routes;\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { PATH } from \"./Routes\";\r\nimport s from './Header.module.css'\r\n\r\nfunction Header() {\r\n    return (\r\n        <div className={s.header}>\r\n            <NavLink activeClassName={s.header__active} to={PATH.PRE_JUNIOR}>PRE_JUNIOR</NavLink>\r\n            <NavLink activeClassName={s.header__active} to={PATH.JUNIOR}>JUNIOR</NavLink>\r\n            <NavLink activeClassName={s.header__active} to={PATH.JUNIOR_PLUS}>JUNIOR_PLUS</NavLink>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport Header from \"./Header\";\r\nimport Routes from \"./Routes\";\r\nimport {HashRouter} from \"react-router-dom\";\r\n\r\nfunction HW5() {\r\n    return (\r\n        <div>\r\n            {/*в gh-pages лучше работает HashRouter*/}\r\n            <HashRouter>\r\n                <Header/>\r\n                <Routes/>\r\n            </HashRouter>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HW5;\r\n","import React from \"react\";\r\nimport s from \"./App.module.css\";\r\n// import HW1 from \"../../../p2-homeworks/h1/HW1\";\r\n// import HW2 from \"../../../p2-homeworks/h2/HW2\";\r\n// import HW3 from \"../../../p2-homeworks/h3/HW3\";\r\n// import HW4 from \"../../../p2-homeworks/h4/HW4\";\r\nimport HW5 from \"../../../p2-homeworks/h5/HW5\";\r\n\r\nfunction App() {\r\n    return (\r\n        <div className={s.App}>\r\n            <div>react homeworks:</div>\r\n            {/* <HW1 />\r\n            <HW2 />\r\n            <HW3 />\r\n            <HW4 /> */}\r\n            <HW5 />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./p1-main/m1-ui/u1-app/App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App/>\r\n    </React.StrictMode>,\r\n    document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}