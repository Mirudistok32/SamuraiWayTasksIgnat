{"version":3,"sources":["p2-homeworks/h1/Message.module.scss","p2-homeworks/h3/Greeting.module.scss","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.module.css","p2-homeworks/h2/Affair.module.css","p2-homeworks/h2/Affairs.module.css","p2-homeworks/h4/common/c2-SuperButton/SuperButton.module.css","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.module.css","p1-main/m1-ui/u1-app/App.module.css","p2-homeworks/h1/HW1.module.css","p2-homeworks/h4/HW4.module.css","p2-homeworks/h1/Message.tsx","p2-homeworks/h1/HW1.tsx","p2-homeworks/h2/Affair.tsx","p2-homeworks/h2/Affairs.tsx","p2-homeworks/h2/HW2.tsx","p2-homeworks/h3/Greeting.tsx","p2-homeworks/h3/GreetingContainer.tsx","p2-homeworks/h3/HW3.tsx","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.tsx","p2-homeworks/h4/common/c2-SuperButton/SuperButton.tsx","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.tsx","p2-homeworks/h4/HW4.tsx","p2-homeworks/h5/pages/PreJunior.tsx","p2-homeworks/h5/pages/Error404.tsx","p2-homeworks/h5/Routes.tsx","p2-homeworks/h5/Header.tsx","p2-homeworks/h5/HW5.tsx","p1-main/m1-ui/u1-app/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Message","avatar","name","message","time","link","className","s","href","target","rel","message__img","src","alt","message__box","message__content","message__name","message__text","messageData","HW1","hw1__title","Affair","props","affair","affair__name","affair__btn","onClick","deleteAffairCallback","_id","Affairs","mappedAffairs","data","map","a","key","affairs","filter","i","affairs__btn","active","setFilter","defaultAffairs","priority","HW2","useState","setAffairs","filteredAffairs","filterAffairs","deleteAffair","Greeting","setNameCallback","addUser","error","totalUsers","inputClass","greeting__input","greeting","value","onChange","placeholder","greeting__error","greeting__btn","greeting__total","GreetingContainer","users","addUserCallback","setName","setError","length","e","currentTarget","trim","alert","HW3","setUsers","newUser","v1","SuperInputText","type","onKeyPress","onChangeText","onEnter","spanClassName","restProps","finalSpanClassName","forSuperIputTextSpan","finalInputClassName","forSuperIputText","errorInput","SuperButton","red","finalClassName","defaultBtn","SuperCheckbox","onChangeChecked","children","checkbox","checked","HW4","text","setText","showAlert","setChecked","column","PreJunior","Error404","PATH","Routes","path","exact","render","to","Header","HW5","App","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.d5b4ca73.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__2OTWf\",\"message__img-link\":\"Message_message__img-link__1i7GU\",\"message__img\":\"Message_message__img__1CA1E\",\"message__box\":\"Message_message__box__1z1xL\",\"message__content\":\"Message_message__content__1ebVL\",\"message__name\":\"Message_message__name__3x8q-\",\"message__text\":\"Message_message__text__8oJ6A\",\"message__time\":\"Message_message__time__3a72Q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"greeting\":\"Greeting_greeting__SUfFf\",\"greeting__box-input\":\"Greeting_greeting__box-input__3UiLj\",\"greeting__input\":\"Greeting_greeting__input__2fpri\",\"greeting__box-button\":\"Greeting_greeting__box-button__1O53d\",\"greeting__btn\":\"Greeting_greeting__btn__2_PsD\",\"greeting__total\":\"Greeting_greeting__total__2lNwO\",\"greeting__error\":\"Greeting_greeting__error__2A5fV\",\"error\":\"Greeting_error__g6T1H\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"errorInput\":\"SuperInputText_errorInput__2WVuu\",\"error\":\"SuperInputText_error__1q9LJ\",\"forSuperIputText\":\"SuperInputText_forSuperIputText__3gdJu\",\"forSuperIputTextSpan\":\"SuperInputText_forSuperIputTextSpan__nv1hS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"affair\":\"Affair_affair__3w9Sd\",\"affair__name\":\"Affair_affair__name__16sMh\",\"affair__btn\":\"Affair_affair__btn__3oPnx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"affairs\":\"Affairs_affairs__7mFE7\",\"affairs__btn\":\"Affairs_affairs__btn__3H6uz\",\"active\":\"Affairs_active__3Vesn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"defaultBtn\":\"SuperButton_defaultBtn__3LjnE\",\"red\":\"SuperButton_red__1kMAj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__3K1AE\",\"spanClassName\":\"SuperCheckbox_spanClassName__1EtFI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__2nZgH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"hw1__title\":\"HW1_hw1__title__2P4oP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blue\":\"HW4_blue__1NkWD\",\"column\":\"HW4_column__3pCXx\",\"forSuperIputText\":\"HW4_forSuperIputText__7CvRv\"};","import React from \"react\";\nimport s from \"./Message.module.scss\"\n\nexport type MessageType = {\n    avatar: string,\n    name: string,\n    message: string,\n    time: string,\n    // Добавил свойство link, для того, чтобы использовать картинку и имя как ссылки\n    link?: string\n}\n\nexport function Message({ avatar, name, message, time, link = \"https://github.com/Mirudistok32\" }: MessageType) {\n    return (\n        <div className={s.message}>\n            {/* Я не знаю, что значат атрибуты rel - у ссылок. \n                Когда пишешь атрибут target, то React требует атрибут rel. \n                Это как-то связанно с безапастностью, но я точно не понимаю этот процесс. */}\n            <a className={s['message__img-link']} href={link} target=\"_blank\" rel='noopener noreferrer'>\n                <img className={s.message__img} src={avatar} alt=\"avatar\" />\n            </a>\n            <div className={s.message__box}>\n                <div className={s.message__content}>\n                    <a className={s.message__name} href={link} target=\"_blank\" rel='noopener noreferrer'>{name}</a>\n                    <div className={s.message__text}>{message}</div>\n                </div>\n                <span className={s[\"message__time\"]}>\n                    {time}\n                </span>\n            </div>\n        </div>\n    );\n}\n","import React from \"react\";\nimport { Message } from './Message'\n// Я подключил глобальные стили, для комфорта. Обычно я их в index.css записываю)\nimport s from './HW1.module.css'\n\nconst messageData = {\n    avatar: \"https://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpg\",\n    name: \"Станислав (mirudistok) Постников\",\n    message: \"`Успех приходит лишь к тем, кто не боится столкнуться с трудностями и пожертвовать своими благами. Джеймс Аллен`\",\n    time: \"22:00\",\n};\n\nfunction HW1() {\n    return (\n        <div>\n            <hr />\n            <span className={s.hw1__title}>homeworks 1</span>\n            {/*should work (должно работать)*/}\n\n            {/* У себя в index.html я подключил шрифт Roboto с жирностью 400 и 500 из google-fonts */}\n            <Message\n                avatar={messageData.avatar}\n                name={messageData.name}\n                message={messageData.message}\n                time={messageData.time} />\n\n            <hr />\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeMessage/>*/}\n            <hr />\n        </div>\n    );\n}\n\nexport default HW1;\n","import React from \"react\";\nimport { AffairType } from \"./HW2\";\nimport s from \"./Affair.module.css\"\n\ntype AffairPropsType = {\n    // key не нужно типизировать\n    affair: AffairType // need to fix any\n    deleteAffairCallback: (_id: number) => void // need to fix any\n}\n\nfunction Affair(props: AffairPropsType) {\n    const deleteCallback = () => { props.deleteAffairCallback(props.affair._id) };// need to fix\n\n    return (\n        <div className={s.affair}>\n            <span className={s.affair__name}>\n                {\n                    props.affair.name\n                }\n            </span>\n            <button className={s.affair__btn} onClick={deleteCallback}>X</button>\n        </div>\n    );\n}\n\nexport default Affair;\n","import React from \"react\";\nimport Affair from \"./Affair\";\nimport s from './Affairs.module.css'\nimport { AffairType, FilterType } from \"./HW2\";\n\ntype AffairsPropsType = { // need to fix any\n    data: Array<AffairType>\n    setFilter: (filter: FilterType) => void\n    deleteAffairCallback: (_id: number) => void\n    filter: FilterType\n}\n\n// Мой тип для массива кнопок\ntype ButtonsDataType = {\n    name: string,\n    filter: FilterType,\n    _id: number\n}\n\nfunction Affairs(props: AffairsPropsType) {\n\n\n    const mappedAffairs = props.data.map((a: AffairType) => (\n        <Affair // should work\n            key={a._id} // кеи ОБЯЗАТЕЛЬНЫ в 99% - так что лучше их писать всегда при создании компонент в мапе\n            affair={a}\n            deleteAffairCallback={props.deleteAffairCallback}\n        />\n    ))\n\n    // const setAll = () => { props.setFilter('all') }; // need to fix\n    // const setHigh = () => { props.setFilter('high') };\n    // const setMiddle = () => { props.setFilter('middle') };\n    // const setLow = () => { props.setFilter('low') };\n\n\n    // Мой массив кнопок\n    const buttonsData: Array<ButtonsDataType> = [\n        { name: 'All', filter: 'all', _id: 1 },\n        { name: 'High', filter: 'high', _id: 2 },\n        { name: 'Middle', filter: 'middle', _id: 3 },\n        { name: 'Low', filter: 'low', _id: 4 },\n    ]\n\n    return (\n        <div className={s.affairs} >\n\n            {mappedAffairs}\n\n            {/* Это вариант тоже работает, но только без подсвечивания активной кнопки */}\n            {/* <button className={s.affairs__btn} onClick={setAll}>All</button>\n            <button className={s.affairs__btn} onClick={setHigh}>High</button>\n            <button className={s.affairs__btn} onClick={setMiddle}>Middle</button>\n            <button className={s.affairs__btn} onClick={setLow}>Low</button> */}\n            {/* Создал массив с объектами, которые представляют набор button.\n                затем пробегаюсь по массиву через метод map(), вешаю на каждую кнопку событие onClick\n                и устанавливаю через callback функцию setFilter() фильтр. Взависимости от фильтра, \n                активной кнопке применяются другие стили */}\n            {\n                buttonsData.map(i => {\n                    return <button\n                        key={i._id}\n                        className={`\n                            ${s.affairs__btn} \n                            ${i.filter === props.filter ? s.active : ''}\n                        `}\n                        onClick={() => props.setFilter(i.filter)}>{i.name}</button>\n                })\n            }\n        </div>\n    );\n}\n\nexport default Affairs;\n","import React, { useState } from \"react\";\nimport Affairs from \"./Affairs\";\n\n// types\nexport type AffairPriorityType = 'high' | \"low\" | \"middle\"; // need to fix any\nexport type AffairType = {\n    _id: number\n    name: string\n    priority: FilterType\n}; // need to fix any\nexport type FilterType = \"all\" | AffairPriorityType;\n\n\n// constants\nconst defaultAffairs: Array<AffairType> = [ // need to fix any\n    { _id: 1, name: \"React-high\", priority: \"high\" },\n    { _id: 2, name: \"anime-low\", priority: \"low\" },\n    { _id: 3, name: \"games-low\", priority: \"low\" },\n    { _id: 4, name: \"work-high\", priority: \"high\" },\n    { _id: 5, name: \"html & css-middle\", priority: \"middle\" },\n];\n\n// pure helper functions\nexport const filterAffairs = (affairs: Array<AffairType>, filter: FilterType): Array<AffairType> => { // need to fix any\n    switch (filter) {\n        case 'all':\n            return affairs\n        case 'high':\n            return affairs.filter(a => a.priority === 'high')\n        case 'middle':\n            return affairs.filter(a => a.priority === 'middle')\n        case 'low':\n            return affairs.filter(a => a.priority === 'low')\n        default:\n            return affairs\n    }\n}\nexport const deleteAffair = (affairs: Array<AffairType>, _id: number): Array<AffairType> => { // need to fix any\n    return affairs.filter(a => a._id !== _id); // need to fix\n}\n\nfunction HW2() {\n\n    const [affairs, setAffairs] = useState<Array<AffairType>>(defaultAffairs); // need to fix any\n    const [filter, setFilter] = useState<FilterType>(\"all\");\n\n    const filteredAffairs = filterAffairs(affairs, filter);\n    const deleteAffairCallback = (_id: number) => setAffairs(deleteAffair(affairs, _id)); // need to fix any\n\n    return (\n        <div>\n            <hr />\n            homeworks 2\n\n            {/*should work (должно работать)*/}\n            <Affairs\n                data={filteredAffairs}\n                setFilter={setFilter}\n                deleteAffairCallback={deleteAffairCallback}\n                // Отправляю фильтр для того, чтобы можно было задать\n                // активной кнопке класс\n                filter={filter}\n\n            />\n\n            <hr />\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeAffairs/>*/}\n            <hr />\n        </div>\n    );\n}\n\nexport default HW2;\n","import React, { ChangeEvent } from \"react\";\nimport s from \"./Greeting.module.scss\";\n\ntype GreetingPropsType = {\n    name: string // need to fix any\n    setNameCallback: (e: ChangeEvent<HTMLInputElement>) => void // need to fix any\n    addUser: () => void // need to fix any\n    error: string // need to fix any\n    totalUsers: number\n\n}\n\n// презентационная компонента (для верстальщика)\nconst Greeting: React.FC<GreetingPropsType> = (\n    { name, setNameCallback, addUser, error, totalUsers = 0, } // деструктуризация пропсов\n) => {\n\n    // Это по заданию\n    // let inputClass = `` // need to fix with (?:)\n    // inputClass = error ? s.error : ``\n\n    // А тут я уже свои классы добавляю\n    let inputClass = s.greeting__input\n    inputClass = error ? inputClass + ` ` + s.error : inputClass; // вот тут неуверен в красивости кода\n\n    // Вот так для меня более понятнее .)\n    // if (error) {\n    //     inputClass += ` ${s.error}`\n    // }\n\n\n    return (\n        <div className={s.greeting}>\n            <div className={s[\"greeting__box-input\"]}>\n                <input\n                    className={inputClass}\n                    value={name}\n                    onChange={setNameCallback}\n                    placeholder=\"Введите имя\"\n                />\n                <span className={s.greeting__error}>{error}</span>\n            </div>\n            <div className={s[\"greeting__box-button\"]}>\n                <button\n                    className={s.greeting__btn}\n                    onClick={addUser}>\n                    add\n                </button>\n                <span className={s.greeting__total}>{totalUsers}</span>\n            </div>\n        </div>\n    );\n}\n\nexport default Greeting;\n","import React, { useState, ChangeEvent } from \"react\";\nimport Greeting from \"./Greeting\";\nimport { UserType } from \"./HW3\";\n\ntype GreetingContainerPropsType = {\n    users: Array<UserType> // need to fix any\n    addUserCallback: (name: string) => void // need to fix any\n}\n\n// более простой и понятный для новичков\n// function GreetingContainer(props: GreetingPropsType) {\n\n// более современный и удобный для про :)\n// уровень локальной логики\nconst GreetingContainer: React.FC<GreetingContainerPropsType> = ({ users, addUserCallback }) => { // деструктуризация пропсов\n    const [name, setName] = useState<string>(\"\"); // need to fix any\n    // Сначало думал, что надо boolean присваивать error, а потом вспомнил про преобразование логических типов и картинка сложилась.)\n    const [error, setError] = useState<string>(\"\"); // need to fix any\n\n    const setNameCallback = (e: ChangeEvent<HTMLInputElement>) => { // need to fix any\n        setName(e.currentTarget.value)\n        setError(\"\")\n    };\n    const addUser = () => {\n        if (name.trim()) {\n            addUserCallback(name)\n            alert(`Hello  ${name}!`);\n            setName('')\n        } else {\n            setError(`* Вы забыли ввести имя`)\n            setName('')\n        }\n\n    };\n\n    const totalUsers: number = users.length; // need to fix\n\n    return (\n        <Greeting\n            name={name}\n            setNameCallback={setNameCallback}\n            addUser={addUser}\n            error={error}\n            totalUsers={totalUsers}\n\n        />\n    );\n}\n\nexport default GreetingContainer;\n","import React, { useState } from \"react\";\nimport GreetingContainer from \"./GreetingContainer\";\nimport './GlobalStyles.css';\nimport { v1 } from 'uuid';\n\n// types\nexport type UserType = {\n    _id: string // need to fix any\n    name: string // need to fix any\n}\n\n// уровень работы с глобальными данными\nfunction HW3() {\n    const [users, setUsers] = useState<Array<UserType>>([]); // need to fix any\n\n    const addUserCallback = (name: string) => { // need to fix any\n        const newUser: UserType = { name: name, _id: v1() }\n        setUsers([...users, newUser]); // need to fix\n    }\n\n    return (\n        <div>\n            <hr />\n            homeworks 3\n\n            {/*should work (должно работать)*/}\n            <GreetingContainer\n                users={users}\n                addUserCallback={addUserCallback}\n            />\n\n            <hr />\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeGreeting/>*/}\n            <hr />\n        </div>\n    );\n}\n\nexport default HW3;\n","import React, { ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent } from \"react\";\nimport s from \"./SuperInputText.module.css\";\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\n\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\n    onChangeText?: (value: string) => void\n    onEnter?: () => void\n    error?: string\n    spanClassName?: string\n    setError: (value: string) => void\n};\n\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (props) => {\n\n    const {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange,\n        onKeyPress,\n        className,\n\n        onChangeText,\n        onEnter,\n        error,\n        spanClassName,\n        setError,\n\n        ...restProps\n    } = props\n\n\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange && onChange(e);\n        onChangeText && onChangeText(e.currentTarget.value);\n        setError(\"\")\n    }\n\n\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\n        onKeyPress && onKeyPress(e);\n\n        e.key === \"Enter\" // если нажата кнопка Enter\n            && onEnter // и есть пропс onEnter\n            && onEnter(); // то вызвать его\n    }\n\n\n    let finalSpanClassName = s.forSuperIputTextSpan + ` ${spanClassName ? spanClassName : ''}`;\n    finalSpanClassName += ` ${error ? s.error : ''}`;\n\n    let finalInputClassName = s.forSuperIputText + ` ${className ? className : ''}`;\n    finalInputClassName += ` ${error ? s.errorInput : ''}`;\n\n    return (\n        <>\n            <input\n                type={\"text\"}\n                onChange={onChangeCallback}\n                onKeyPress={onKeyPressCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\n            />\n            {error && <span className={finalSpanClassName}>*{error}</span>}\n        </>\n    );\n}\n\nexport default SuperInputText;\n","import React, { ButtonHTMLAttributes, DetailedHTMLProps } from \"react\";\nimport s from \"./SuperButton.module.css\";\n\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>;\n\ntype SuperButtonPropsType = DefaultButtonPropsType & {\n    red?: boolean\n}\n\nconst SuperButton: React.FC<SuperButtonPropsType> = (props) => {\n\n    const {\n        red,\n        className,\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\n    } = props\n\n    let finalClassName = `${red ? s.red : ''} ${s.defaultBtn + ` ` + className} `;\n\n    return (\n        <button\n            className={finalClassName}\n            {...restProps}\n        />\n    );\n}\n\nexport default SuperButton;\n","import React, { ChangeEvent, DetailedHTMLProps, InputHTMLAttributes } from \"react\";\nimport s from \"./SuperCheckbox.module.css\";\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\n\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\n    onChangeChecked?: (checked: boolean) => void\n    spanClassName?: string\n};\n\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeChecked,\n        className, spanClassName,\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange && onChange(e)\n        onChangeChecked && onChangeChecked(e.currentTarget.checked)\n    }\n\n    const finalInputClassName = `${s.checkbox} ${className ? className : \"\"}`;\n\n    return (\n        <label>\n            <input\n                type={\"checkbox\"}\n                onChange={onChangeCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\n            />\n            {children && <span className={s.spanClassName}>{children}</span>}\n        </label> // благодаря label нажатие на спан передастся в инпут\n    );\n}\n\nexport default SuperCheckbox;\n","import React, { ChangeEvent, useState } from \"react\";\nimport SuperInputText from \"./common/c1-SuperInputText/SuperInputText\";\nimport s from \"./HW4.module.css\";\nimport SuperButton from \"./common/c2-SuperButton/SuperButton\";\nimport SuperCheckbox from \"./common/c3-SuperCheckbox/SuperCheckbox\";\n\nfunction HW4() {\n\n    const [text, setText] = useState<string>(\"\");\n    //Сделал свой хук для ошибки\n    let [error, setError] = useState<string>('')\n\n\n    const showAlert = () => {\n\n        //Проверка, если поле пустое , то ошибка, а иначе нет ошибки\n        text ? setError(\"\") : setError(\"error\")\n        if (error) {\n            alert(\"введите текст...\");\n        } else {\n            alert(text);\n            //Затераю поле value\n            setText('')\n        }\n    }\n\n\n    const [checked, setChecked] = useState<boolean>(false);\n    const testOnChange = (e: ChangeEvent<HTMLInputElement>) => setChecked(e.currentTarget.checked);\n\n    return (\n        <div>\n            <hr />\n            homeworks 4\n            <div className={s.column}>\n                <SuperInputText\n                    value={text}\n                    onChangeText={setText}\n                    onEnter={showAlert}\n                    error={error}\n                    setError={setError}\n                    placeholder={'Я input, читаю ваши...'}\n                // className={s.blue} работает!\n                />\n\n                <SuperButton\n                    red={false}\n                    onClick={showAlert}\n                >\n                    delete\n                </SuperButton>\n\n\n                <SuperCheckbox\n                    checked={checked}\n                    onChangeChecked={setChecked}\n                >\n                    some text {/*// этот текст попадёт в children*/}\n                </SuperCheckbox>\n\n                <SuperCheckbox checked={checked} onChange={testOnChange} />\n            </div>\n\n            <hr />\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeSuperInputText/>*/}\n            {/*<AlternativeSuperButton/>*/}\n            {/*<AlternativeSuperCheckbox/>*/}\n            <hr />\n        </div>\n    );\n}\n\nexport default HW4;\n","import React from \"react\";\nimport HW1 from \"../../h1/HW1\";\nimport HW2 from \"../../h2/HW2\";\nimport HW3 from \"../../h3/HW3\";\nimport HW4 from \"../../h4/HW4\";\n\nfunction PreJunior() {\n    return (\n        <div>\n            <HW1 />\n            <HW2 />\n            <HW3 />\n            <HW4 />\n        </div>\n    );\n}\n\nexport default PreJunior;\n","import React from \"react\";\n\nfunction Error404() {\n    return (\n        <div>\n            <div>404</div>\n            <div>Page not found!</div>\n            <div>—ฅ/ᐠ.̫ .ᐟ\\ฅ—</div>\n        </div>\n    );\n}\n\nexport default Error404;\n","import React from \"react\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\nimport PreJunior from \"./pages/PreJunior\";\nimport Error404 from \"./pages/Error404\";\n\nexport const PATH = {\n    PRE_JUNIOR: \"/pre-junior\",\n}\n\nfunction Routes() {\n    return (\n        <div>\n            <Switch>\n                <Route path={\"/\"} exact render={() => <Redirect to={PATH.PRE_JUNIOR} />} />\n                <Route path={PATH.PRE_JUNIOR} render={() => <PreJunior />} />\n                <Route render={() => <Error404 />} />\n            </Switch>\n        </div>\n    );\n}\n\nexport default Routes;\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { PATH } from \"./Routes\";\n\nfunction Header() {\n    return (\n        <div>\n            <NavLink to={PATH.PRE_JUNIOR}>PRE_JUNIOR</NavLink>\n\n        </div>\n    );\n}\n\nexport default Header;\n","import React from \"react\";\nimport Header from \"./Header\";\nimport Routes from \"./Routes\";\nimport {HashRouter} from \"react-router-dom\";\n\nfunction HW5() {\n    return (\n        <div>\n            {/*в gh-pages лучше работает HashRouter*/}\n            <HashRouter>\n                <Header/>\n                <Routes/>\n            </HashRouter>\n        </div>\n    );\n}\n\nexport default HW5;\n","import React from \"react\";\nimport s from \"./App.module.css\";\n// import HW1 from \"../../../p2-homeworks/h1/HW1\";\n// import HW2 from \"../../../p2-homeworks/h2/HW2\";\n// import HW3 from \"../../../p2-homeworks/h3/HW3\";\n// import HW4 from \"../../../p2-homeworks/h4/HW4\";\nimport HW5 from \"../../../p2-homeworks/h5/HW5\";\n\nfunction App() {\n    return (\n        <div className={s.App}>\n            <div>react homeworks:</div>\n            {/* <HW1 />\n            <HW2 />\n            <HW3 />\n            <HW4 /> */}\n            <HW5 />\n        </div>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./p1-main/m1-ui/u1-app/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}